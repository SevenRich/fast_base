"""create menu,company and equipment table

Revision ID: 2003a88f04c8
Revises: 3b3b38e04f76
Create Date: 2021-03-23 12:08:04.254133

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2003a88f04c8'
down_revision = '3b3b38e04f76'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('identities', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               comment='创建时间',
               existing_nullable=True)
    op.alter_column('identities', 'desc',
               existing_type=sa.VARCHAR(length=64),
               comment='权限描述',
               existing_nullable=True)
    op.alter_column('identities', 'name',
               existing_type=sa.VARCHAR(length=64),
               nullable=False,
               comment='权限 name')
    op.alter_column('identities', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               comment='更新时间',
               existing_nullable=True)
    op.alter_column('roles', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               comment='创建时间',
               existing_nullable=True)
    op.alter_column('roles', 'desc',
               existing_type=sa.VARCHAR(length=64),
               comment='角色描述',
               existing_nullable=True)
    op.alter_column('roles', 'name',
               existing_type=sa.VARCHAR(length=64),
               comment='角色 name',
               existing_nullable=False)
    op.alter_column('roles', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               comment='更新时间',
               existing_nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               comment='创建时间',
               existing_nullable=True)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=120),
               comment='Email',
               existing_nullable=False)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               comment='激活状态',
               existing_nullable=True)
    op.alter_column('users', 'is_superuser',
               existing_type=sa.BOOLEAN(),
               comment='超级管理员',
               existing_nullable=True)
    op.alter_column('users', 'password',
               existing_type=sa.VARCHAR(length=120),
               comment='密码',
               existing_nullable=False)
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               comment='更新时间',
               existing_nullable=True)
    op.alter_column('users', 'username',
               existing_type=sa.VARCHAR(length=64),
               comment='用户名',
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'username',
               existing_type=sa.VARCHAR(length=64),
               comment=None,
               existing_comment='用户名',
               existing_nullable=False)
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               comment=None,
               existing_comment='更新时间',
               existing_nullable=True)
    op.alter_column('users', 'password',
               existing_type=sa.VARCHAR(length=120),
               comment=None,
               existing_comment='密码',
               existing_nullable=False)
    op.alter_column('users', 'is_superuser',
               existing_type=sa.BOOLEAN(),
               comment=None,
               existing_comment='超级管理员',
               existing_nullable=True)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               comment=None,
               existing_comment='激活状态',
               existing_nullable=True)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=120),
               comment=None,
               existing_comment='Email',
               existing_nullable=False)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               comment=None,
               existing_comment='创建时间',
               existing_nullable=True)
    op.alter_column('roles', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               comment=None,
               existing_comment='更新时间',
               existing_nullable=True)
    op.alter_column('roles', 'name',
               existing_type=sa.VARCHAR(length=64),
               comment=None,
               existing_comment='角色 name',
               existing_nullable=False)
    op.alter_column('roles', 'desc',
               existing_type=sa.VARCHAR(length=64),
               comment=None,
               existing_comment='角色描述',
               existing_nullable=True)
    op.alter_column('roles', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               comment=None,
               existing_comment='创建时间',
               existing_nullable=True)
    op.alter_column('identities', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               comment=None,
               existing_comment='更新时间',
               existing_nullable=True)
    op.alter_column('identities', 'name',
               existing_type=sa.VARCHAR(length=64),
               nullable=True,
               comment=None,
               existing_comment='权限 name')
    op.alter_column('identities', 'desc',
               existing_type=sa.VARCHAR(length=64),
               comment=None,
               existing_comment='权限描述',
               existing_nullable=True)
    op.alter_column('identities', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               comment=None,
               existing_comment='创建时间',
               existing_nullable=True)
    # ### end Alembic commands ###
